// Code generated by mockery v1.0.0. DO NOT EDIT.

package user

import mock "github.com/stretchr/testify/mock"

// MockStore is an autogenerated mock type for the Store type
type MockStore struct {
	mock.Mock
}

// Create provides a mock function with given fields: u
func (_m *MockStore) Create(u *User) error {
	ret := _m.Called(u)

	var r0 error
	if rf, ok := ret.Get(0).(func(*User) error); ok {
		r0 = rf(u)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: id
func (_m *MockStore) Delete(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Find provides a mock function with given fields: id
func (_m *MockStore) Find(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindByLogin provides a mock function with given fields: email, pass
func (_m *MockStore) FindByLogin(email string, pass string) (User, error) {
	ret := _m.Called(email, pass)

	var r0 User
	if rf, ok := ret.Get(0).(func(string, string) User); ok {
		r0 = rf(email, pass)
	} else {
		r0 = ret.Get(0).(User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(email, pass)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
